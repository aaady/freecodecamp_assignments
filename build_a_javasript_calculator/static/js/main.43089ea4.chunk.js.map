{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Calculator","props","onClickHandler","event","currentTarget","id","name","innerText","setState","test","state","formula","display","slice","length","evaluate","replace","split","pop","includes","e","this","value","onClick","className","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.43089ea4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport { evaluate } from 'mathjs'   // const { evaluate } = require('mathjs')\r\n\r\n// const buttonArr = [\r\n//   {\"0\": 0}, {\"1\": 1}, {\"2\": 2}, {\"3\": 3}, {\"4\": 4}, {\"5\": 5}, {\"6\": 6}, {\"7\": 7}, {\"8\": 8}, {\"9\": 9}, \r\n//   {\".\": \".\"}, \r\n//   {\"+\": \"＋\"}, {\"-\": \"－\"}, {\"*\": \"×\"}, {\"/\": \"÷\"}, \r\n//   {\"=\": \"＝\"}, \r\n//   {\"all clear\": \"AC\"}\r\n// ];\r\n\r\nclass Calculator extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      'display': \"0\",\r\n      'formula': ''\r\n    }\r\n  }\r\n\r\n  onClickHandler = (event) => {\r\n    \r\n    // let html = event.currentTarget.innerHTML; //c.f. textContent, innerText, innerHTML\r\n    \r\n    const {id, innerText, name} = event.currentTarget; // 分割代入 (Destructuring assignment)\r\n    // const {display, formula} = this.state;\r\n\r\n    // 異常な入力をはねてreturn;\r\n// let str = this.state.formula + name\r\n// console.log(\"str: \" + str, \"type: \" + typeof(str))\r\n\r\n// “.”は数字の中に１つ以下:\r\n//console.log(\"“.”は数字の中に１つ以下: \" + this.state.formula.split(/[*/+-]/).pop().includes(\".\"))\r\n\r\n// 数式が空\"\" && 入力値が“0-9.-”以外から始まる: /^[^0-9.-]/、\r\n// if (this.state.formula === \"\" && /^[^0-9.-]/.test(name)) return;\r\n\r\n// “0-9, [0-9].”で終わる: /\\d|(\\d.)$/\r\n\r\n// // 置換　“+-*/”\r\n// console.log(/[*/+-][*/+]$/.test(str), /[*/+-]-$/.test(str))\r\n// // ++ ⇒ +, +* ⇒ *, +/ ⇒ /, -+ ⇒ +, -* ⇒ *, -/ ⇒ /, -+ ⇒ +, -* ⇒ *, -/ ⇒ /,\r\n// str.replace(/[*/+-][*/+]$/, name); \r\n// // +-+ ⇒ +, +-- ⇒ -, +-* ⇒ *, +-/ ⇒ /,  \r\n// str.replace(/[*/+-]-[*/+-]$/, name);\r\n\r\n  try{\r\n    // console.log(\"Clicked: \" + name)\r\n    switch(id) {\r\n      case 'clear':\r\n        this.setState({\r\n          'display': \"0\", \r\n          'formula': ''\r\n        })\r\n        break;\r\n      case 'delete':\r\n        if(/=$/.test(this.state.formula)) return;\r\n        \r\n        this.setState({\r\n          'display': this.state.display.slice(0, this.state.display.length - 1), \r\n          'formula': this.state.formula.slice(0, this.state.formula.length - 1)\r\n        })\r\n        break;\r\n      case 'zero':\r\n      case 'one':\r\n      case 'two':\r\n      case 'three':\r\n      case 'four':\r\n      case 'five':\r\n      case 'six':\r\n      case 'seven':\r\n      case 'eight':\r\n      case 'nine':\r\n        this.setState({\r\n          'display': (this.state.display === \"0\") ? name\r\n                      : (this.state.display === \"-\") ? this.state.display + name\r\n                      : (/[*/+=-]$/.test(this.state.formula)) ? name\r\n                      : this.state.display + name,\r\n          'formula': (this.state.display === \"0\") ? this.state.formula.slice(0, -1) + name\r\n                      : (/=$/.test(this.state.formula)) ? name\r\n                      : this.state.formula + name\r\n        }) \r\n        break;\r\n      case 'equals': \r\n        // 数式は“0-9.-”の何れかから始まる\r\n        if (this.state.formula === \"\") return\r\n        // “*, /, +, =, -”の後に“=”はこない\r\n        if (/[*/+=-]$/.test(this.state.formula)) return\r\n\r\n        this.setState({\r\n              'display': evaluate(this.state.formula),  \r\n              'formula': this.state.formula + name\r\n        })\r\n        break;\r\n      case 'subtract':\r\n        this.setState({\r\n          'display': (this.state.formula === \"\") ? name\r\n                    : /^-$/.test(this.state.formula) ? name \r\n                    : /\\d-$/.test(this.state.formula) ? name\r\n                    : /\\d[*/+=]$/.test(this.state.formula) ? name\r\n                    : '',\r\n          'formula': (this.state.formula === \"\") ? name\r\n                    : /^-$/.test(this.state.formula) ? name \r\n                    : (this.state.formula.slice(-1) === \"=\") ? this.state.display + name\r\n                    : /[*/+-]-$/.test(this.state.formula) ? this.state.formula.replace(/[*/+-]-$/g, '') + name\r\n                    : this.state.formula + name\r\n        })\r\n        break;\r\n      case 'add':\r\n      case 'multiply':\r\n      case 'divide':\r\n        // 数式は“0-9.-”の何れかから始まる\r\n        if (this.state.formula === \"\") return\r\n\r\n        this.setState((state) => {\r\n          if (state.formula.slice(-1) === \"=\") {\r\n            return {\r\n              // ++ ⇒ +, +* ⇒ *, +/ ⇒ /, -+ ⇒ +, -* ⇒ *, -/ ⇒ /, -+ ⇒ +, -* ⇒ *, -/ ⇒ /\r\n              'formula': state.display + name\r\n            }\r\n          } else if (/[*/+-]$/.test(name.slice(-1))) {\r\n            return {\r\n              'display': '', \r\n              // ++ ⇒ +, +* ⇒ *, +/ ⇒ /, -+ ⇒ +, -* ⇒ *, -/ ⇒ /, -+ ⇒ +, -* ⇒ *, -/ ⇒ /\r\n              'formula': state.formula.replace(/[*/+-]-?$/g, '') + name\r\n            }\r\n\r\n          } else {\r\n            return {\r\n              'display': '', \r\n              // ++ ⇒ +, +* ⇒ *, +/ ⇒ /, -+ ⇒ +, -* ⇒ *, -/ ⇒ /, -+ ⇒ +, -* ⇒ *, -/ ⇒ /\r\n              'formula': state.formula.replace(/[*/+-]-?$/g, '') + name\r\n            }\r\n          }\r\n        })\r\n\r\n        // if (this.state.formula.slice(-1) === \"=\") {\r\n        //   this.setState({\r\n        //     // 'display': '', \r\n        //     // ++ ⇒ +, +* ⇒ *, +/ ⇒ /, -+ ⇒ +, -* ⇒ *, -/ ⇒ /, -+ ⇒ +, -* ⇒ *, -/ ⇒ /\r\n        //     'formula': this.state.display + name\r\n        //   })\r\n        // } else {\r\n        //   // ++ ⇒ +, +* ⇒ *, +/ ⇒ /, -+ ⇒ +, -* ⇒ *, -/ ⇒ /, -+ ⇒ +, -* ⇒ *, -/ ⇒ /,\r\n        //   // this.state.formula.replace(/[*/+-]$/, name); \r\n        //   this.setState({\r\n        //     'display': '', \r\n        //     // ++ ⇒ +, +* ⇒ *, +/ ⇒ /, -+ ⇒ +, -* ⇒ *, -/ ⇒ /, -+ ⇒ +, -* ⇒ *, -/ ⇒ /\r\n        //     'formula': this.state.formula.replace(/[*/+-]-?$/, '') + name\r\n        //   })\r\n        // }\r\n        break;\r\n      case 'decimal':\r\n        // 入力中の数字(項)に既にコンマ\".\"が含まれている場合は、何もせず関数から抜ける。\r\n        if (this.state.formula.split(/[*/+-]/).pop().includes(\".\")) return\r\n\r\n        this.setState({\r\n          'display': this.state.display + name,\r\n          'formula': (/=$/.test(this.state.formula)) ? name\r\n                    :this.state.formula + name\r\n        })\r\n        break;\r\n      default:\r\n    }\r\n\r\n    } catch(e) {\r\n      this.setState({\r\n        'display': \"Error\",\r\n        'formula': \"\"\r\n      })\r\n    } finally {\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // console.log(\r\n    //   'display: ' + this.state.display, \r\n    //   'formula: ' + this.state.formula\r\n    // );\r\n\r\n    return(\r\n      <div id=\"calculator\">\r\n        <div>\r\n          <div id=\"formula\">{this.state.formula.replace(/\\*/g, \"×\").replace(/\\//g, \"÷\")}</div>\r\n          <div id=\"display\">{this.state.display}</div>\r\n        </div>\r\n\r\n        <button id=\"clear\" name=\"clear\" value=\"clear\" onClick={this.onClickHandler}>Clear</button>\r\n        {/* <button id=\"clear\" name=\"clear\" value=\"clear\" onClick={this.onClickHandler}>Clear <i className='fas fa-paw'></i></button> */}\r\n        <button id=\"divide\" name=\"/\" value=\"/\" onClick={this.onClickHandler}>÷</button>\r\n        <button id=\"multiply\" name=\"*\" value=\"*\" onClick={this.onClickHandler}>×</button>\r\n        <button id=\"delete\" name=\"delete\" value=\"delete\" onClick={this.onClickHandler}><i className=\"fas fa-backspace\"></i></button>\r\n        <button id=\"seven\" name=\"7\" value=\"7\" onClick={this.onClickHandler}>7</button>\r\n        <button id=\"eight\" name=\"8\" value=\"8\" onClick={this.onClickHandler}>8</button>\r\n        <button id=\"nine\" name=\"9\" value=\"9\" onClick={this.onClickHandler}>9</button>\r\n        <button id=\"subtract\" name=\"-\" value=\"-\" onClick={this.onClickHandler}>-</button>\r\n        <button id=\"four\" name=\"4\" value=\"4\" onClick={this.onClickHandler}>4</button>\r\n        <button id=\"five\" name=\"5\" value=\"5\" onClick={this.onClickHandler}>5</button>\r\n        <button id=\"six\" name=\"6\" value=\"6\" onClick={this.onClickHandler}>6</button>\r\n        <button id=\"add\" name=\"+\" value=\"+\" onClick={this.onClickHandler}>+</button>\r\n        <button id=\"one\" name=\"1\"  value=\"1\"onClick={this.onClickHandler}>1</button>\r\n        <button id=\"two\" name=\"2\" value=\"2\" onClick={this.onClickHandler}>2</button>\r\n        <button id=\"three\" name=\"3\" value=\"3\" onClick={this.onClickHandler}>3</button>\r\n        <button id=\"zero\" name=\"0\" value=\"0\" onClick={this.onClickHandler}>0</button>\r\n        <button id=\"decimal\" name=\".\" value=\".\" onClick={this.onClickHandler}>.</button>\r\n        <button id=\"equals\" name=\"=\" value=\"=\" onClick={this.onClickHandler}>=</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Calculator />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}